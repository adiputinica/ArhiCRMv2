@model ArhiCRMv2.Models.Proiect
@{
    ViewBag.Title = "Details";
}
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

<h2>Details</h2>

<div>
    <div class="col-md-10">
        @Html.Label(Model.Nume)
    </div>

    <div class="col-md-10">
        @Html.Label(Model.NrProiect)
    </div>

    <div class="col-md-10">
        @if (Model.NrContract == null)
        {
            @Html.Label("NrContract nedefinit");
        }
        else
        {
            @Html.Label(Model.NrContract);
        }

    </div>

    <div class="col-md-10">
        @Html.Label(Model.An)
    </div>

    <div class="col-md-10">
        @Html.Label(Model.TipProiect.Nume)
    </div>

</div>

@using (Ajax.BeginForm("Details", "Proiect", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)

    @Html.HiddenFor(m => m.ID)
    <fieldset>
        <div class="form-horizontal">

            <div class="form-group">
                @Html.LabelFor(m => m.Status, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.StatusID, new SelectList(ViewBag.ListaStatus, "Value", "Text"), "Selectati statusul", new { @class = "form-control " })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salveaza modificari" class="btn btn-dark" />
                </div>
            </div>
        </div>
    </fieldset>
}

</hr>
<h2>Beneficiar</h2>
</hr>

Editeaza detaliile
<label class="switch">
    <input type="checkbox" id="editDetalii" onclick="switched()">
    <span class="slider round"></span>
</label>

<div id="divDisplay">
    <div class="col-md-10">
        @if (Model.Beneficiar.Nume == null)
        {
            @Html.Label("Nume beneficiar nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.Nume);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.Adresa == null)
        {
            @Html.Label("Adresa beneficiar nu este definita");
        }
        else
        {
            @Html.Label(Model.Beneficiar.Adresa);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.CNP == null)
        {
            @Html.Label("CNP beneficiar nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.CNP);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.SerieCI == null)
        {
            @Html.Label("Serie CI beneficiar nu este definita");
        }
        else
        {
            @Html.Label(Model.Beneficiar.SerieCI);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.NumarCI == null)
        {
            @Html.Label("Numar CI beneficiar nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.NumarCI);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.Telefon == null)
        {
            @Html.Label("Telefon beneficiar nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.Telefon);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.Email == null)
        {
            @Html.Label("Email beneficiar nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.Email);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.PersoanaContact == null)
        {
            @Html.Label("Persoana de contact nu este definita");
        }
        else
        {
            @Html.Label(Model.Beneficiar.PersoanaContact);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Beneficiar.TelefonPersoanaContact == null)
        {
            @Html.Label("Telefon persoana de contact nu este definit");
        }
        else
        {
            @Html.Label(Model.Beneficiar.TelefonPersoanaContact);
        }
    </div>
</div>

@using (Ajax.BeginForm("Edit", "Beneficiar", new { id = Model.BeneficiarID }, new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)

    @Html.HiddenFor(m => m.Beneficiar.ID)
    <fieldset>
        <div class="form-horizontal" style="display:none" id="divEdit">

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.Nume, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.Nume, new { @class = "form-control", placeholder = "Nume " })
                    @Html.ValidationMessageFor(model => model.Beneficiar.Nume)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.Adresa, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.Adresa, new { @class = "form-control", placeholder = "Adresa" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.Adresa)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.CNP, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.CNP, new { @class = "form-control", placeholder = "CNP" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.CNP)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.SerieCI, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.SerieCI, new { @class = "form-control", placeholder = "Serie CI" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.SerieCI)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.NumarCI, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.NumarCI, new { @class = "form-control", placeholder = "Numar CI" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.NumarCI)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.Telefon, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.Telefon, new { @class = "form-control", placeholder = "Telefon" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.Telefon)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.PersoanaContact, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.PersoanaContact, new { @class = "form-control", placeholder = "Persoana Contact" })
                    @Html.ValidationMessageFor(model => model.Beneficiar.PersoanaContact)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Beneficiar.TelefonPersoanaContact, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Beneficiar.TelefonPersoanaContact, new { @class = "form-control", placeholder = "Telefon P.C." })
                    @Html.ValidationMessageFor(model => model.Beneficiar.PersoanaContact)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salveaza modificari beneficiar" class="btn btn-dark" />
                </div>
            </div>
        </div>
    </fieldset>
}

</hr>
<h2>Amplasament</h2>
</hr>

Editeaza detaliile
<label class="switch">
    <input type="checkbox" id="editDetalii2" onclick="switched2()">
    <span class="slider round"></span>
</label>

<div id="divDisplay2">
    <div class="col-md-10">
        @if (Model.Amplasament.SuprafataTerenMasurata == null)
        {
            @Html.Label("Suprafata teren nu este definita");
        }
        else
        {
            @Html.DisplayFor(m =>m.Amplasament.SuprafataTerenMasurata);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.JudetID == null)
        {
            @Html.Label("Judetul nu este definit");
        }
        else
        {
            @Html.Label(Model.Amplasament.Judet.Nume);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.LocalitateID == null)
        {
            @Html.Label("Localitatea nu este definita");
        }
        else
        {
            @Html.Label(Model.Amplasament.Localitate.Nume);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.ComunaSat == null)
        {
            @Html.Label("Comuna/Sat nu este definit/a");
        }
        else
        {
            @Html.Label(Model.Amplasament.ComunaSat);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.Strada == null)
        {
            @Html.Label("Strada nu este definita");
        }
        else
        {
            @Html.Label(Model.Amplasament.Strada);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.Numar == null)
        {
            @Html.Label("Numarul nu este definit");
        }
        else
        {
            @Html.Label(Model.Amplasament.Numar);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.Tarla == null)
        {
            @Html.Label("Tarlaua nu este definita");
        }
        else
        {
            @Html.Label(Model.Amplasament.Tarla);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.Parcela == null)
        {
            @Html.Label("Parcela nu este definita");
        }
        else
        {
            @Html.Label(Model.Amplasament.Parcela);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.NumarCadastral == null)
        {
            @Html.Label("Numarul cadastral nu este definit");
        }
        else
        {
            @Html.Label(Model.Amplasament.NumarCadastral);
        }
    </div>
    <div class="col-md-10">
        @if (Model.Amplasament.NumarCF == null)
        {
            @Html.Label("Numar CF nu este definit");
        }
        else
        {
            @Html.Label(Model.Amplasament.NumarCF);
        }
    </div>
</div>

@using (Ajax.BeginForm("Edit", "Amplasament", new { id = Model.AmplasamentID }, new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)

    @Html.HiddenFor(m => m.Amplasament.ID)
    <fieldset>
        <div class="form-horizontal" style="display:none" id="divEdit2">

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.SuprafataTerenMasurata, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amplasament.SuprafataTerenMasurata, new { @class = "form-control", placeholder = "Suprafata" })
                    @Html.ValidationMessageFor(model => model.Amplasament.SuprafataTerenMasurata)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Amplasament.Judet, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Amplasament.JudetID, new SelectList(ViewBag.ListaJudete, "Value", "Text"), "Selectati judetul", new { id = "JudetId", @class = "form-control " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Amplasament.Localitate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Amplasament.LocalitateID, new SelectList(Model.LocalitateSubCategory, "Value", "Text"), "Selectati localitatea", new { id = "LocalitateId", @class = "form-control " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.ComunaSat, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.ComunaSat, new { @class = "form-control", placeholder = "Comuna/Sat" })
                    @Html.ValidationMessageFor(model => model.Amplasament.ComunaSat)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.Strada, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.Strada, new { @class = "form-control", placeholder = "Strada" })
                    @Html.ValidationMessageFor(model => model.Amplasament.Strada)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.Numar, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.Numar, new { @class = "form-control", placeholder = "Numar" })
                    @Html.ValidationMessageFor(model => model.Amplasament.Numar)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.Tarla, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.Tarla, new { @class = "form-control", placeholder = "Tarla" })
                    @Html.ValidationMessageFor(model => model.Amplasament.Tarla)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.Parcela, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.Parcela, new { @class = "form-control", placeholder = "Parcela" })
                    @Html.ValidationMessageFor(model => model.Amplasament.Parcela)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.NumarCadastral, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.NumarCadastral, new { @class = "form-control", placeholder = "Numar Cadastral" })
                    @Html.ValidationMessageFor(model => model.Amplasament.NumarCadastral)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amplasament.NumarCF, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Amplasament.NumarCF, new { @class = "form-control", placeholder = "Numar CF" })
                    @Html.ValidationMessageFor(model => model.Amplasament.NumarCF)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salveaza modificari amplasament" class="btn btn-dark" />
                </div>
            </div>
        </div>
    </fieldset>
}



<script type="text/javascript">

    $(function () {
        $("#JudetId").change(function () {
            var val = $(this).val();
            var subItems="";
            $.getJSON("@Url.Action("GetSub","Proiect")", {id:val} ,function (data) {
              $.each(data,function(index,item){
                subItems+="<option value='"+item.Value+"'>"+item.Text+"</option>"
              });
              $("#LocalitateId").html(subItems)
            });
        });
    });

    function OnSuccess(response) {
        alert(response);
    }

    function OnFailure(response) {
        alert("Error occurred.");
    }

    function switched() {
        var checkBox = document.getElementById("editDetalii");
        var divE = document.getElementById("divEdit");
        var divD = document.getElementById("divDisplay");
        if (checkBox.checked == true) {
            divD.style.display = "none";
            divE.style.display = "block";
        } else {
            divE.style.display = "none";
            divD.style.display = "block";
        }
    }

     function switched2() {
        var checkBox = document.getElementById("editDetalii2");
        var divE = document.getElementById("divEdit2");
        var divD = document.getElementById("divDisplay2");
        if (checkBox.checked == true) {
            divD.style.display = "none";
            divE.style.display = "block";
        } else {
            divE.style.display = "none";
            divD.style.display = "block";
        }
    }
</script>

<script src="~/Scripts/jquery-3.5.1.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>